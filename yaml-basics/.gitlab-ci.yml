# by default, all the other jobs will have the node image
# Defining a global image
image: node

stages:
  - build
  - test
  - deploy review
  - deploy staging
  - deploy production
  - production tests
  - cache

# Make the cache globally (other jobs can use this)
cache:
  # key to identify when we can use this cache
  key: ${CI_COMMIT_REF_SLUG} # predefined variable
  # save the node_modules
  paths:
    - node_modules/
  # skip uploading cache file
  policy: pull

variables:
  STAGING_DOMAIN: puzzled-staging.surge.sh
  PRODUCTION_DOMAIN: puzzled-production.surge.sh

# only runs when triggered by schedule
update cache:
  stage: cache
  script:
    - npm install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    # creates new cache (push) but wont download the cache (pull)
    policy: push
  only:
    - schedules

build website:
  stage: build
  # GitLab CI pipeline should use the same Node.js version as you are running locally
  # Mark the jobs for the build & test stages with the following `only` job policy.
  only:
    - master
    - merge_requests
  script:
    # to get this predefined variable (display value of this environment variable)
    - echo $CI_COMMIT_SHORT_SHA
    - npm install
    - npm install -g gatsby-cli
    - gatsby build
    # sed stream editor
    # - sed i "s/%%VERSION%%/$CI_COMMIT_SHORT_SHA/" ./public/index.html
  artifacts:
    paths:
      # store the artifact here
      - ./public
  except:
    - schedules

# Test if the artifact works
test artifact:
  stage: test
  image: alpine
  script:
    - grep -q "Gatsby" ./public/index.html
    # try putting an error to see how it works
    # - grep "jiewei" ./public/index.html
  except:
    - schedules

test website:
  stage: test
  script:
    - npm install
    - npm install -g gatsby-cli
    - gatsby serve & # start the server for gatsby
    - sleep 6
    # `curl` is a command line tool and library for transferring data with URLs
    # It supports many protocols including HTTP
    # "http://localhost:9000" is the input
    - curl "http://localhost:9000" | tac | tac | grep -q "Gatsby"
  except:
    - schedules

deploy review:
  stage: deploy review
  # only runs on merge requests
  only:
    - merge_requests
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://puzzled-$CI_ENVIRONMENT_SLUG.surge.sh
    # stop the job
    on_stop: stop review
  script:
    - npm install --global surge
    # surge looks for the environment variables
    - surge --project ./public --domain puzzled-$CI_ENVIRONMENT_SLUG.surge.sh

stop review:
  stage: deploy review
  # exclude it from the main pipeline (only works for merge request)
  only:
    - merge_requests
  # only review merge requests
  variables:
    # branch/repo is not cloned in this job
    GIT_STRATEGY: none
  script:
    - npm install --global surge
    - surge teardown puzzled-$CI_ENVIRONMENT_SLUG.surge.sh
  when: manual
  environment:
    # must match the name of the environment we are trying to stop
    name: review/$CI_COMMIT_REF_NAME
    action: stop

.deploy_template: &deploy
  only:
    - master
  script:
    - npm install --global surge
    - surge --project ./public --domain $DOMAIN
  environment:
    url: http://$DOMAIN

# Stages for deployment
deploy staging:
  <<: *deploy
  stage: deploy staging
  variables:
    DOMAIN: $STAGING_DOMAIN
  environment:
    name: staging
  # this job only executes on master branch
  except:
    - schedules

deploy production:
  <<: *deploy
  stage: deploy production
  variables:
    DOMAIN: $PRODUCTION_DOMAIN
  environment:
    name: production
  before_script:
    - echo "Deploying to production"
  # Manual deployments / Manually triggering jobs
  when: manual
  # does not allow the steps after `deploy production` to fail
  # allow_failure: false
  except:
    - schedules

production tests:
  image: alpine
  cache: {} # this job will not use the cache
  stage: production tests
  only:
    - master
  script:
    - apk add --no-cache curl
    - curl -s "https://puzzled-temper.surge.sh" | grep "Hi People"
    # - curl -s "https://puzzled-temper.surge.sh" | grep "$CI_COMMIT_SHORT_SHA"
  except:
    - schedules
